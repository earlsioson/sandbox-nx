# =============================================================================
# 4. NIV WORKFLOW STATUS TRANSITIONS (CORRECTED WITH DOMAIN LOGIC)
# File: 04-workflow-transitions.d2
# =============================================================================

vars: {
  d2-config: {
    layout-engine: tala
  }
}

direction: down

# External Trigger
external_trigger: Patient Added to NIV Onboarding {
  shape: cloud

  trigger_sources: "Trigger Sources:\n• AXI Admit Application\n• Manual RT Assessment\n• PCC Webhook Events\n• Platform Admission Events"

  note: "External event initiates\nNIV onboarding process"
}

# Domain-Driven Status Workflow
NEW: NEW Status {
  shape: oval
  style.fill: "#E3F2FD"

  domain_operations: "Domain Operations:\n• NIVProgramOnboarding.create()\n• Patient.validateForOnboarding()\n• SpecialistAssignmentService.assign()"

  activities: "Business Activities:\n• PCC Integration: Fetch patient EHR data\n• Domain Validation: Patient eligibility check\n• Specialist Assignment: Auto-assign optimal RT\n• Event Publishing: OnboardingInitiatedEvent\n• Notification Dispatch: Stakeholder notifications"

  invariants: "Domain Invariants:\n• Patient must have valid medical record\n• Facility assignment required\n• PCC integration must be available"

  note: "Aggregate: NIVProgramOnboarding\nStatus: OnboardingStatusType.NEW"
}

WATCHLIST: WATCHLIST Status {
  shape: oval
  style.fill: "#FFF3E0"

  domain_operations: "Domain Operations:\n• NIVEligibilityService.assessEligibility()\n• NIVProgramOnboarding.makeQualificationDecision()\n• EligibilityAssessment.create()"

  activities: "Business Activities:\n• RT Clinical Review: Manual assessment\n• Domain Service: Complex eligibility logic\n• Lab Analysis: Blood gas evaluation\n• Diagnosis Validation: ICD-10 code analysis\n• Clinical Reasoning: Generate assessment rationale"

  invariants: "Domain Invariants:\n• Assigned RT must be active\n• EHR data must be current (≤7 days)\n• Clinical assessment required"

  note: "Complex business logic in\nNIVEligibilityService"
}

# Decision Points (Business Rules)
qualified_decision: Patient Qualified? {
  shape: diamond
  style.fill: "#F3E5F5"

  business_rules: "Business Rules (Domain):\n• Respiratory condition present\n• Oxygen saturation < 88% OR CO2 > 45mmHg\n• No contraindications found\n• Age within acceptable range"

  domain_logic: "Domain Method:\nNIVEligibilityService.assessEligibility()\n→ EligibilityAssessment.isQualified"
}

consent_decision: Patient Consent Given? {
  shape: diamond
  style.fill: "#E8F5E8"

  business_rules: "Business Rules (Domain):\n• Patient must provide informed consent\n• Consent must be documented\n• Refusal triggers re-review scheduling"

  domain_logic: "Domain Method:\nNIVProgramOnboarding.processConsentResponse()"
}

labs_required: Additional Labs Required? {
  shape: diamond
  style.fill: "#FFF8E1"

  business_rules: "Business Rules (Domain):\n• Blood gas results > 7 days old\n• Missing critical lab values\n• Physician orders additional tests"

  domain_logic: "Domain Method:\nNIVEligibilityService.determineRequiredLabs()"
}

PENDING: PENDING Status {
  shape: oval
  style.fill: "#E0F2F1"

  domain_operations: "Domain Operations:\n• NIVProgramOnboarding.scheduleDeviceFitting()\n• DeviceConfiguration.create()\n• ConsentStatus.confirmed()"

  activities: "Business Activities:\n• Device Fitting: Schedule and configure NIV device\n• Final Preparations: Complete onboarding requirements\n• Pre-Activation Checks: Validate readiness\n• Documentation: Ensure all forms completed"

  invariants: "Domain Invariants:\n• Patient consent confirmed\n• Device configuration completed\n• All required documents attached"

  note: "Ready for program activation\nAwaiting device fitting"
}

ACTIVE: ACTIVE Status {
  shape: oval
  style.fill: "#E8F5E8"

  domain_operations: "Domain Operations:\n• NIVProgramOnboarding.activateProgram()\n• RTVisitSchedule.createInitial()\n• PostTrackingWorkflow.initiate()"

  activities: "Business Activities:\n• Program Activation: Patient officially on NIV\n• Post-Tracking: Ongoing monitoring initiated\n• RT Visit Schedule: 7-day visit cycle begins\n• Outcome Tracking: Monitor patient progress"

  invariants: "Domain Invariants:\n• Device successfully fitted\n• Initial RT visit scheduled\n• Patient education completed"

  note: "Patient actively on NIV program\nOngoing care management"
}

REVIEWED: REVIEWED Status {
  shape: oval
  style.fill: "#FFEBEE"

  domain_operations: "Domain Operations:\n• NIVProgramOnboarding.scheduleReReview()\n• ReviewSchedule.create()\n• DisqualificationReason.record()"

  activities: "Business Activities:\n• Documentation: Record disqualification reasoning\n• Re-Review Scheduling: Set future assessment date\n• Notification: Inform stakeholders of decision\n• Audit Trail: Complete decision documentation"

  invariants: "Domain Invariants:\n• Disqualification reason documented\n• Re-review date within acceptable timeframe\n• All stakeholders notified"

  note: "Not qualified for NIV\nScheduled for future re-assessment"
}

CHANGED: CHANGED Status {
  shape: oval
  style.fill: "#FFF3E0"

  domain_operations: "Domain Operations:\n• LabOrder.create()\n• NIVProgramOnboarding.orderAdditionalLabs()\n• LabRequirement.generate()"

  activities: "Business Activities:\n• Lab Orders: Generate required lab requests\n• Blood Gas Orders: Schedule arterial blood gas\n• Status Tracking: Monitor lab completion\n• Re-Assessment: Return to qualification review"

  invariants: "Domain Invariants:\n• Required labs clearly specified\n• Lab orders properly submitted\n• Timeline for completion defined"

  note: "Additional testing required\nReturn to assessment upon completion"
}

# Domain Event Flows
domain_events: Domain Events Published {
  onboarding_initiated: "OnboardingInitiatedEvent\n• Triggers stakeholder notifications\n• Initiates audit trail\n• Starts integration workflows"

  qualification_completed: "QualificationCompletedEvent\n• Records clinical decision\n• Updates patient status\n• Notifies care team"

  status_changed: "PatientStatusChangedEvent\n• Tracks state transitions\n• Maintains audit compliance\n• Triggers workflow steps"

  program_activated: "ProgramActivatedEvent\n• Initiates ongoing care\n• Starts monitoring workflows\n• Updates reporting systems"

  note: "Domain events enable\nloose coupling and auditability"
}

# Business Rules & State Transitions
business_rules: Business Rules Engine {
  eligibility_rules: "NIVEligibilityService Rules:\n• Respiratory condition validation\n• Lab result analysis\n• Contraindication checking\n• Age appropriateness"

  transition_rules: "State Transition Rules:\n• OnboardingStatus.canTransitionTo()\n• Status change validation\n• Invariant enforcement\n• Event publishing"

  workflow_rules: "Workflow Business Rules:\n• RT assignment optimization\n• Notification targeting\n• Document requirements\n• Timeline enforcement"

  note: "All business rules\nencapsulated in domain layer"
}

# Workflow Connections with Domain Operations
external_trigger -> NEW: "Domain Factory:\nNIVProgramOnboarding.create()"

NEW -> WATCHLIST: "Domain Method:\nNIVProgramOnboarding.transitionToWatchlist()\nEvent: OnboardingInitiatedEvent"

WATCHLIST -> qualified_decision: "Domain Service:\nNIVEligibilityService.assessEligibility()\nReturns: EligibilityAssessment"

qualified_decision -> consent_decision: "YES: EligibilityAssessment.isQualified = true\nBusiness Rule: Qualified patients need consent"

qualified_decision -> labs_required: "NO: EligibilityAssessment.isQualified = false\nBusiness Rule: Check if more data needed"

consent_decision -> PENDING: "YES: Domain Method:\nNIVProgramOnboarding.processConsentResponse(true)\nEvent: ConsentConfirmedEvent"

consent_decision -> REVIEWED: "NO: Domain Method:\nNIVProgramOnboarding.processConsentResponse(false)\nReason: 'Patient refused consent'"

labs_required -> REVIEWED: "NO: Domain Method:\nNIVProgramOnboarding.disqualifyPatient()\nReason: 'Not qualified - no additional testing'"

labs_required -> CHANGED: "YES: Domain Method:\nNIVProgramOnboarding.orderAdditionalLabs()\nEvent: LabsOrderedEvent"

PENDING -> ACTIVE: "Domain Method:\nNIVProgramOnboarding.activateProgram()\nBusiness Rule: Device fitting completed\nEvent: ProgramActivatedEvent"

CHANGED -> WATCHLIST: "Domain Method:\nNIVProgramOnboarding.returnToAssessment()\nTrigger: New lab results available\nEvent: LabResultsReceivedEvent"

REVIEWED -> WATCHLIST: "Domain Method:\nNIVProgramOnboarding.initiateReReview()\nTrigger: Scheduled re-review date reached\nEvent: ReReviewInitiatedEvent"

# Domain Integration Points
integration_points: Integration Points {
  pcc_integration: "PointClickCare Integration:\n• EHR data retrieval\n• Lab result synchronization\n• Real-time patient updates\n• Diagnosis code validation"

  platform_integration: "Platform Integration:\n• Cross-app notifications\n• Shared user management\n• Centralized audit trail\n• Facility data synchronization"

  notification_integration: "Notification Integration:\n• Role-based messaging\n• Multi-channel delivery\n• Template management\n• Delivery tracking"

  note: "All integrations through\nport interfaces (hexagonal)"
}

# Aggregate Consistency Boundaries
consistency_boundaries: Aggregate Consistency {
  onboarding_aggregate: "NIVProgramOnboarding Aggregate:\n• All status transitions\n• Audit trail entries\n• Document attachments\n• Domain event publishing"

  transaction_boundary: "Transaction Boundaries:\n• Single aggregate per transaction\n• Eventual consistency between aggregates\n• Domain events for integration\n• Repository saves entire aggregate"

  invariant_enforcement: "Invariant Enforcement:\n• Business rules in aggregate methods\n• State validation before transitions\n• Required data presence checks\n• Workflow sequence enforcement"

  note: "DDD aggregate patterns\nensure data consistency"
}

# Domain Event Connections
NEW -> domain_events.onboarding_initiated: "publishes"
qualified_decision -> domain_events.qualification_completed: "publishes"
PENDING -> domain_events.status_changed: "publishes"
ACTIVE -> domain_events.program_activated: "publishes"

# Business Rules Connections  
qualified_decision -> business_rules.eligibility_rules: "executes"
WATCHLIST -> business_rules.workflow_rules: "applies"
NEW -> business_rules.transition_rules: "validates"
