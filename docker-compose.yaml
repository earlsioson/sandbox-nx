services:
  postgres:
    image: pgvector/pgvector:pg17 
    container_name: postgres
    volumes:
      - ./_state/postgres:/var/lib/postgresql/data
      - ./postgres/init_scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: lab
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d lab"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - core
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.dev
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "8080:80"
    volumes:
      - ./_state/pgadmin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
      timescaledb:
        condition: service_healthy
    networks:
      - core
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"  # OTLP HTTP receiver
      - "8888:8888"  # Prometheus exporter
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=otel-collector
    networks:
      - core
  jaeger:
    image: jaegertracing/jaeger:latest
    container_name: jaeger
    ports:
      - "16686:16686" 
      - "4317:4317"  # OTLP gRPC receiver
    networks:
      - core
    depends_on:
      - otel-collector

networks:
  core:
    driver: bridge
